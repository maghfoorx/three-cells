#import auth.graphql

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    viewer: Viewer!
        @field(resolver: "App\\GraphQL\\Queries\\ViewerQuery@resolve")

    threeCellForDate(date: String!): ThreeCell
        @field(resolver: "App\\GraphQL\\Queries\\ThreeCellQuery@resolve")

    allThreeCellEntries: [ThreeCell!]!
        @field(
            resolver: "App\\GraphQL\\Queries\\ThreeCellQuery@allThreeCellEntries"
        )
}

type Mutation {
    submitThreeCellEntry(input: ThreeCellInput!): ThreeCell
        @field(resolver: "App\\GraphQL\\Mutations\\ThreeCellMutation@submit")
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "Avatar URL."
    image: String

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Viewer {
    id: ID!
    user: User
    isAuthenticated: Boolean!
}

type ThreeCell {
    id: ID!
    user_id: ID!
    summary: String
    focused_hours: Float!
    score: Int!
    date_for: String!
    created_at: DateTime!
    updated_at: DateTime!
}

input ThreeCellInput {
    summary: String
    focused_hours: Float!
    score: Int!
    date_for: String!
}
